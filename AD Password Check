# Version: 1.1 | Date: 2025-03-06 | Description: Checks AD password age for emails from a text file, including password change date.

# Import Active Directory module
Import-Module ActiveDirectory

# Define the path to the text file containing email addresses
$EmailListPath = "C:\path\to\email_list.txt"

# Verify file exists
if (!(Test-Path $EmailListPath)) {
    Write-Host "Error: File not found at $EmailListPath" -ForegroundColor Red
    exit
}

# Extract email addresses from file (only text within < > brackets)
$Emails = (Get-Content -Path $EmailListPath) | ForEach-Object {
    if ($_ -match "<(.*?)>") { $matches[1] }
} | Where-Object { $_ }

# Get all users from AD in one query (efficient batch processing)
$Users = Get-ADUser -Filter * -Properties EmailAddress, PasswordLastSet | 
         Where-Object { $_.EmailAddress -and $_.EmailAddress -in $Emails }

# Process results
$Results = $Users | ForEach-Object {
    [PSCustomObject]@{
        Email = $_.EmailAddress
        PasswordLastSet = $_.PasswordLastSet.ToString("yyyy-MM-dd") # Format date
        PasswordAgeDays = (New-TimeSpan -Start $_.PasswordLastSet -End (Get-Date)).Days
    }
}

# Group and sort results
$OlderPasswords = $Results | Where-Object { $_.PasswordAgeDays -ge 7 } | Sort-Object Email
$NewerPasswords = $Results | Where-Object { $_.PasswordAgeDays -le 6 } | Sort-Object Email

# Display results
if ($OlderPasswords) {
    Write-Host "`n========== PASSWORD AGE: 7+ DAYS ==========" -ForegroundColor Red
    $OlderPasswords | ForEach-Object { 
        Write-Host "User: $($_.Email) | Last Changed: $($_.PasswordLastSet) | Password Age: " -NoNewline
        Write-Host "$($_.PasswordAgeDays) days" -ForegroundColor Red 
    }
}

if ($NewerPasswords) {
    Write-Host "`n========== PASSWORD AGE: 6 OR FEWER DAYS ==========" -ForegroundColor Green
    $NewerPasswords | ForEach-Object { 
        Write-Host "User: $($_.Email) | Last Changed: $($_.PasswordLastSet) | Password Age: " -NoNewline
        Write-Host "$($_.PasswordAgeDays) days" -ForegroundColor Green 
    }
}

# Notify if no users were found
if (-not $Results) {
    Write-Host "No matching users found in Active Directory." -ForegroundColor Yellow
}
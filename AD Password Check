# Version: 1.3 | Date: 2025-03-06 | Description: Checks AD password age for emails from a text file, including password change date.

# Import Active Directory module
Import-Module ActiveDirectory

# Define the path to the text file containing email addresses
$EmailListPath = "C:\Users\david.mize\OneDrive - materiongcchigh\Documents\AD Password emailed.txt" 

# Verify file exists
if (!(Test-Path $EmailListPath)) {
    Write-Host "Error: File not found at $EmailListPath" -ForegroundColor Red
    exit
}

# Extract email addresses from file (only text within < > brackets)
$Emails = Select-String -Path $EmailListPath -Pattern "<(.*?)>" | ForEach-Object { $_.Matches.Groups[1].Value } | Where-Object { $_ }

# Exit if no valid emails are found
if (-not $Emails) {
    Write-Host "No valid email addresses found in the file." -ForegroundColor Yellow
    exit
}

# Construct filter string dynamically for AD query
$FilterString = ($Emails | ForEach-Object { "(EmailAddress -eq '$_')" }) -join " -or "

# Get only required users from AD
$Users = Get-ADUser -Filter $FilterString -Properties EmailAddress, PasswordLastSet

# Process results into objects
$Results = $Users | ForEach-Object {
    $PasswordAge = (New-TimeSpan -Start $_.PasswordLastSet -End (Get-Date)).Days
    [PSCustomObject]@{
        Email = $_.EmailAddress
        PasswordLastSet = $_.PasswordLastSet.ToString("MM/dd")  # Format as MM/dd
        PasswordAgeDays = $PasswordAge
    }
}

# Group and sort results
$ExpiredPasswords  = $Results | Where-Object { $_.PasswordAgeDays -gt 180 }  | Sort-Object Email
$OlderPasswords    = $Results | Where-Object { $_.PasswordAgeDays -ge 7 -and $_.PasswordAgeDays -le 180 } | Sort-Object Email
$NewerPasswords    = $Results | Where-Object { $_.PasswordAgeDays -le 6 } | Sort-Object Email

# Function to display results with color highlighting for password age
function Display-Results {
    param ($Title, $Color, $Passwords, $ShowLastSet)
    
    if ($Passwords) {
        Write-Host "`n========== $Title ==========" -ForegroundColor $Color
        $Passwords | ForEach-Object { 
            Write-Host "User: $($_.Email) | Password Age: " -NoNewline
            Write-Host "$($_.PasswordAgeDays) days" -ForegroundColor $Color -NoNewline
            if ($ShowLastSet) { Write-Host " ($($_.PasswordLastSet))" } else { Write-Host "" }
        }
    }
}

# Display grouped results
Display-Results "EXPIRED PASSWORDS (180+ DAYS)" "Red" $ExpiredPasswords $false
Display-Results "PASSWORD AGE: 7+ DAYS" "DarkYellow" $OlderPasswords $false
Display-Results "PASSWORD AGE: 6 OR FEWER DAYS" "Green" $NewerPasswords $true

# Notify if no users were found
if (-not $Results) {
    Write-Host "No matching users found in Active Directory." -ForegroundColor Yellow
}